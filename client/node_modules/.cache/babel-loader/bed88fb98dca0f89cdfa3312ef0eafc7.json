{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector } from \"react-redux\";\n\nconst HideOverflow = props => {\n  _s();\n\n  const GlobalState = useSelector(state => state.GlobalElementsReducer);\n  useEffect(() => {\n    if (GlobalState.singInPopup.visible || GlobalState.logInPopup.visible) {\n      document.querySelector('body').style.overflow = 'hidden';\n    } else {\n      document.querySelector('body').style.overflow = 'visible';\n    }\n  }, [GlobalState.logInPopup.visible, GlobalState.singInPopup.visible]);\n  return null;\n};\n\n_s(HideOverflow, \"LheTv3kLwf9ds+NXuZNPVtbiiwA=\", false, function () {\n  return [useSelector];\n});\n\n_c = HideOverflow;\nexport default HideOverflow;\n\nvar _c;\n\n$RefreshReg$(_c, \"HideOverflow\");","map":{"version":3,"sources":["/Users/helloworld/Documents/marketFirst/market-place/client/src/components/UI/HideOverflow/HideOverflow.js"],"names":["React","useEffect","useSelector","HideOverflow","props","GlobalState","state","GlobalElementsReducer","singInPopup","visible","logInPopup","document","querySelector","style","overflow"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,WAAR,QAA0B,aAA1B;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAAA;;AAE5B,QAAMC,WAAW,GAAGH,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACC,qBAAhB,CAA/B;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,WAAW,CAACG,WAAZ,CAAwBC,OAAxB,IAAmCJ,WAAW,CAACK,UAAZ,CAAuBD,OAA9D,EAAuE;AACrEE,MAAAA,QAAQ,CAACC,aAAT,CAAuB,MAAvB,EAA+BC,KAA/B,CAAqCC,QAArC,GAAgD,QAAhD;AACD,KAFD,MAEO;AACLH,MAAAA,QAAQ,CAACC,aAAT,CAAuB,MAAvB,EAA+BC,KAA/B,CAAqCC,QAArC,GAAgD,SAAhD;AACD;AACF,GANQ,EAMN,CAACT,WAAW,CAACK,UAAZ,CAAuBD,OAAxB,EAAiCJ,WAAW,CAACG,WAAZ,CAAwBC,OAAzD,CANM,CAAT;AAQA,SAAO,IAAP;AACD,CAbD;;GAAMN,Y;UAEgBD,W;;;KAFhBC,Y;AAeN,eAAeA,YAAf","sourcesContent":["import React, {useEffect} from 'react'\nimport {useSelector} from \"react-redux\";\n\nconst HideOverflow = props => {\n\n  const GlobalState = useSelector(state => state.GlobalElementsReducer)\n\n  useEffect(() => {\n    if (GlobalState.singInPopup.visible || GlobalState.logInPopup.visible) {\n      document.querySelector('body').style.overflow = 'hidden'\n    } else {\n      document.querySelector('body').style.overflow = 'visible'\n    }\n  }, [GlobalState.logInPopup.visible, GlobalState.singInPopup.visible])\n\n  return null;\n};\n\nexport default HideOverflow;"]},"metadata":{},"sourceType":"module"}